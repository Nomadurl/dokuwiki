a:95:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1;}i:3;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"Алгоритм назначения куратора на задание.";}i:2;i:3;}i:4;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:78;}i:5;a:3:{i:0;s:9:"linebreak";i:1;a:0:{}i:2;i:80;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"
Назначение осуществляется по cron, входной скрипт:
";}i:2;i:82;}i:7;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:173;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"\console\controllers\TaskToCuratorAssignmentController::actionAssign";}i:2;i:175;}i:9;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:243;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:". В нем вызывается функция ";}i:2;i:245;}i:11;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:293;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"_assignCurator";}i:2;i:295;}i:13;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:309;}i:14;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:", которая выбирает все задания на которые необходимо назначить куратора и в цикле вызывается метод ";}i:2;i:311;}i:15;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:493;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"\common\components\taskAssignment\TaskAssignment::assignCurator";}i:2;i:495;}i:17;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:558;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:". В методе среди прочего выполняется выбор подходящего куратора:";}i:2;i:560;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:678;}i:20;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:144:"  $assigner = new \common\components\taskAssignment\components\Assessment($this->task); 
  $this->task->curator_id = $assigner->chooseCurator();";}i:2;i:678;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:678;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Метод ";}i:2;i:829;}i:23;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:840;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"\common\components\taskAssignment\components\Assessment::chooseCurator";}i:2;i:842;}i:25;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:912;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:285:" служит для определения оптимального куратора для данного задания. Данная функция возвращает куратора с наибольшим приоритетом для назначения на задание:";}i:2;i:914;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1199;}i:28;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:84:"$this->chosenCurator = array_search(max(array_values($weightArray)), $weightArray);
";}i:2;i:1199;}i:29;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1199;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" Для выбора составляется массив данных $";}i:2;i:1289;}i:31;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:1362;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"weightArray";}i:2;i:1364;}i:33;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:1375;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:" в котором находятся подходящие кураторы и значение веса. Массив формируется функцией ";}i:2;i:1377;}i:35;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:1536;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:"\common\components\taskAssignment\components\Assessment::_handleEstimationData";}i:2;i:1538;}i:37;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:1616;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:". Внутри функции создается массив ";}i:2;i:1618;}i:39;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:1680;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"$weights";}i:2;i:1682;}i:41;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:1690;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:":";}i:2;i:1692;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1693;}i:44;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:43:"$weights = $this->_collectEstimationData();";}i:2;i:1693;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1693;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:256:" который содержит сборку разнородных оценочных данных по кураторам. Чтобы получить все веса по конкретному куратору необходимо выполнить: ";}i:2;i:1740;}i:47;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:1996;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"ArrayHelper::getColumn($weights, $candidateId)";}i:2;i:1998;}i:49;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:2044;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:209:". Далее в функции создается начальный массив кандидатов где ключами являются id кураторов, а значения - 0, начальные ";}i:2;i:2046;}i:51;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2255;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"веса";}i:2;i:2256;}i:53;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2264;}i:54;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" по критериям:";}i:2;i:2265;}i:55;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2290;}i:56;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:119:"$this->candidates = array_flip($this->candidates);
array_walk($this->candidates, function (&$value) {
  $value = 0;
});";}i:2;i:2290;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2290;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"Изначальный массив ";}i:2;i:2419;}i:59;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:2455;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"$candidates";}i:2;i:2457;}i:61;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:2468;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:" формируется в конструкторе, вызовом функции ";}i:2;i:2470;}i:63;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:2553;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"_chooseCandidates()";}i:2;i:2555;}i:65;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:2574;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:174:".
После создания всех подготовительных массивов формируется итоговый массив в формате [куртор ";}i:2;i:2576;}i:67;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"=>";}i:2;i:2750;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" вес]:";}i:2;i:2752;}i:69;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2761;}i:70;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:335:"$resultWeights = [];
foreach ($this->candidates as $candidateId => $weight) { //суммируем веса всех кураторов и выдаем результирующий массив весов
  $resultWeights[$candidateId] = array_sum(ArrayHelper::getColumn($weights, $candidateId));
}
$this->candidates = $resultWeights;
";}i:2;i:2761;}i:71;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2761;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:119:"Из функции возвращается массив кураторов с их суммарными весами:";}i:2;i:3110;}i:73;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3229;}i:74;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:25:"return $this->candidates;";}i:2;i:3229;}i:75;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3229;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Метод ";}i:2;i:3259;}i:77;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:3270;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"_collectEstimationData()";}i:2;i:3272;}i:79;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:3296;}i:80;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:" возвращает массив критериев:";}i:2;i:3298;}i:81;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3352;}i:82;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:376:"private function _collectEstimationData()
{
  $estimation = [];
  foreach ($this->getCriterion() as $criterion) {
    /**
     * @var \common\components\taskAssignment\components\criteria\Criterion $criterionEntity ;
     */
     $criterionEntity = new $criterion($this);
     $estimation[$criterionEntity::KEY] = $criterionEntity->getEstimate();
   }
   return $estimation;
}";}i:2;i:3352;}i:83;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3352;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:107:"Массив весов (критериев) формируется каждый своим классом:";}i:2;i:3754;}i:85;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3861;}i:86;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:721:"public function getCriterion()
{
  return [
    \common\components\taskAssignment\components\criteria\CityStat::class,
    \common\components\taskAssignment\components\criteria\TaskNumber::class,
    \common\components\taskAssignment\components\criteria\ItCurator::class,     
    \common\components\taskAssignment\components\criteria\OrganizationCuratorsFrequencyStatistics::class,
    \common\components\taskAssignment\components\criteria\TakeDate::class,
    \common\components\taskAssignment\components\criteria\OrganizationPersonal::class,
    \common\components\taskAssignment\components\criteria\NewOrganization::class,
    \common\components\taskAssignment\components\criteria\OrganizationCleaning::class,
  ];
}
";}i:2;i:3861;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3861;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"Каждый класс имеет главный метод ";}i:2;i:4612;}i:89;a:3:{i:0;s:14:"monospace_open";i:1;a:0:{}i:2;i:4673;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"getEstimate()";}i:2;i:4675;}i:91;a:3:{i:0;s:15:"monospace_close";i:1;a:0:{}i:2;i:4688;}i:92;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:4690;}i:93;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4691;}i:94;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:4691;}}